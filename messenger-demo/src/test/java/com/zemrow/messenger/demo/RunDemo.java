package com.zemrow.messenger.demo;

import io.github.bonigarcia.wdm.WebDriverManager;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import java.awt.*;
import java.util.UUID;

import static org.junit.jupiter.api.Assertions.assertEquals;

/**
 * Запуск демо, если отключить синтез речи получится прогон тестов
 *
 * @author Alexandr Polyakov on 2019.01.14
 */
public class RunDemo {

    private boolean voiceEnable;

    private WebDriver userA;
    private WebDriver userB;

    public void demo(boolean voiceEnable) throws Exception {
        this.voiceEnable = voiceEnable;
        final Robot robot;
        if (voiceEnable) {
            robot = new Robot();
        } else {
            robot = null;
        }
        Runtime.getRuntime().addShutdownHook(new Thread(RunDemo.this::close));
        try {
            userA = openBrowser();
            // развертывание окна на весь экран
            userA.manage().window().maximize();

            userA.get("http://localhost/");

            final HomePage homePageA = new HomePage(userA, robot);
            if (voiceEnable) {
                homePageA.setRobot(robot);
            }
            final LoginPage loginPage = homePageA.goLoginPage();

            speak("Здравствуйте.");
            speak("Представляю вашему вниманию видео инструкцию к talk to task точка ru.");

            // регистрация пользователя по логину
            loginPage.moveToRegistration();
            speak("Для начала нам необходимо зарегистрироваться.");
            // TODO Это можно сделать двумя способами:
            final String usernameA = "Петров" + UUID.randomUUID().toString();
            final String passwordA = usernameA;
            speak("Для этого перейдем на форму регистрации.");
            final RegistrationPage registrationPage = loginPage.goRegistrationPage();
            // Регистрация
            speak("Нам потребуется ввести логин, пароль и повторить ввод пароля чтобы избежать ошибки.");
            registrationPage.moveToUsername();
            speak("Логин может содержать буквы, цифры.");
            registrationPage.moveToPassword();
            speak("Пароль должен содержать буквы, цифры, спецсимволы и должен быть длиннее пяти символов.");
            registrationPage.registration(usernameA, passwordA);
            speak("После регистрации вы попадаете в основное окно приложения.");
            homePageA.moveToUserInfoName();
            speak("Левый верхний угол информация о текущем пользователе и меню.");
            // Проверка что вошли под вновь созданной учеткой.
            homePageA.checkUsername(usernameA);


            // TODO Рассмотрим меню
            //В меню можно включить уведомления, чтобы браузер уведомлял вас о новых сообщениях даже если окно браузера будет свернуто
            //В редактирование профиля можно изменить информацию о себе, установить аватар, сменить ФИО, добавить емайл, или другие данные пользователя, которые будут отображаться участникам чата при просмотре вашего профиля.
            //Добавление способов авторизации находится в разработке, одновременно использование одним пользователем для входа и логина и телефона пока не доступно, здесь вы только можете изменить текущий пароль
            //Не забываем нажимать кнопку сохранить для того чтобы ваши изменения применились.
            //В меню также можно сменить статус пользователя

            // TODO Создание организации
            // TODO управление счетчиками

            // выход
            speak("Для выхода откроем меню.");
            homePageA.userMenuOpen();
            speak("Нажимаем выход.");
            homePageA.userMenuExitSelect();
            loginPage.isShow();
            // TODO регистрация пользователя по телефону
            // Второй способ зарегистрироваться это ввести свой телефон во вкладке телефон, система отправит на указанный вами телефон SMS с временным паролем для входа, введя его вы попадаете в приложение, система дополнительно попросит вас ввести информацию о пользователе ФИО.
            speak("Войдём воспользовавшись для входа логином с паролем.");
            // вход, авторизация пользователя по логину и паролю
            loginPage.login(usernameA, passwordA);
            // проверка что вошли под вновь созданной учеткой
            homePageA.checkUsername(usernameA);

            speak("Теперь рассмотрим интерфейс подробней.");
            homePageA.moveToUserInfoName();
            speak("Слева под вашим профилем основные вкладки: “портфель” и “контакты”");
            homePageA.moveToChatTab();
            speak("Вкладка “портфель”");
            speak("Первый раздел называется “последние” - здесь отображаются все чаты и задания отсортированные по дате последнего сообщения - свежие вверху");
            speak("В этом разделе удобно отслеживать последние и непрочитанные сообщения.");
            //TODO можно отфильтровать по типу: чат, задание, проект и дт.
            // Выбрав узел попадаем в чат/задание.

            // TODO редактирование профиля
            // TODO смена аватар
            // TODO разрешить уведомления
            // TODO смена статуса

            speak("Откроем еще одно окно");
            final Dimension size = userA.manage().window().getSize();
            userA.manage().window().setSize(new Dimension(size.getWidth() / 2, size.getHeight()));
            userA.manage().window().setPosition(new Point(0, 0));

            userB = openBrowser();
            userB.manage().window().setSize(new Dimension(size.getWidth() / 2, size.getHeight()));
            userB.manage().window().setPosition(new Point(size.getWidth() / 2, 0));
            userB.get("http://localhost/");
            // Регистрация второго пользователя
            final String usernameB = "Сидоров" + UUID.randomUUID().toString();
            final String passwordB = usernameB;
            final HomePage homePageB = new HomePage(userB, robot);
            final LoginPage loginPageB = homePageB.goLoginPage();
            // Перейти на регистрацию
            final RegistrationPage registrationPageB = loginPageB.goRegistrationPage();
            speak("Зарегистрируем второго пользователя");
            // Регистрация
            registrationPageB.registration(usernameB, passwordB);
            // Проверка что вошли под вновь созданой учеткой.
            homePageB.checkUsername(usernameB);

            speak("Вернемся к интерфейсу в окне первого пользователя.");
            speak("Над вкладками расположена строка поиска.");
            // !!! TODO задания последние
            // TODO поиск среди всех пользователей
            homePageA.waitElement(By.xpath("//td[@class='left_panel']//td[@class='find_textfield']/input")).sendKeys(usernameB.substring(0, 1));
            speak("Начиная вводить предлагается выбрать область поиска");
            speak("Рассмотрим поиск пользователя");
            speak("Нажмем кнопку поиска или enter");
            homePageA.waitElement(By.xpath("//td[@class='left_panel']//td[@class='find_button']")).click();
            speak("Откроится окно поиска пользователей системы");
            homePageA.waitElement(By.xpath("//table[contains(@class,'search_user_dialog')]//td[@class='find_textfield']/input")).sendKeys(usernameB.substring(1));
            speak("Результат поиск фильтруется по мере уточнения в строке поиска");

            // TODO просмотр профиль пользователя
            speak("Нажав на строку, откроется профиль пользователя");
            homePageA.waitElement(By.xpath("//table[contains(@class,'search_user_dialog')]//a[text()='" + usernameB + "']")).click();
            assertEquals(usernameB, homePageA.waitElement(By.xpath("//table[contains(@class,'user_info_dialog')]//td[@class='username']")).getText());
            speak("Закроем профиль пользователя");
            homePageA.waitElement(By.xpath("//table[contains(@class,'user_info_dialog')]//td[@class='dialog_close']")).click();

            // TODO добавление пользователя в контакты
            // TODO открывается окно для ввода сообщения преветствия
            // TODO по умолчанию сообщения преветствия заполнено ""
            // TODO для пользователя который добавляет контакт открывается окно с чатом
            // TODO для пользователя который был добавлен добавляется новый элемент в список чатов
            // TODO для пользователя который был добавлен добавляется новый элемент в список контактов

            // TODO подтверждение контакта
            // TODO открытие чата с контактом
            // Для того чтобы просмотреть переписку с пользователем нажмем левую клавишу мыши на плитке контакта, при этом в правую часть загрузится чат.
            // TODO получение шапки чата
            // TODO получение сообщений чата (последних n)
            // TODO написать сообщение пользователю
            //Для отправки сообщения введя текст в нижнем правом поле для ввода и нажав enter текст отправится в чат,
            //поддерживается многострочный текст, для этого необходимо нажать ctrl+enter, курсор перейдет на новую строку не отправив сообщение, поддерживается вставка текста и вставка файлов.
            // TODO получение сообщений чата
            // TODO проверка отметки о прочтении
            // TODO проверка прокрутки чата (получение сообщений чата более n)
            // TODO ctrl+enter
            // TODO отправить файл, выбрав через скрепку
            // Для отправки файла также можно воспользоваться скрепкой и выбрать файл через стандартное окно
            //Также поддерживается отправка файла перетаскиванием в поле для ввода сообщения.
            // TODO отправить файл, drag_and_drop
            // TODO вставить скрин
            // Нажав клавишу Print Screen и ctrl+v в сообщение вы прикрепите скрин (снимок экрана) и быстро его отправить собеседникам, настоятельно рекомендую скрин выполнять сочетанием клавиш alt+Print Screen в таком случае будет сделан снимок только активного окна
            // TODO скачать файл
            // TODO просмотр участников чата
            // Список участников можно посмотреть в шапке чата, нажав на имя участника откроется его профиль, для добавление участников нажимаем “плюс” и выбираем из списка, в окне поддерживается поиск, можно одновременно добавить несколько участников.
            // TODO просмотр профиля участника
            // TODO добавление участника в контакт - создание чата (группы), нажатием кнопки и выбором из справочника
            // TODO добавление участника в чат - нажатием кнопки и выбором из справочника (с историей)
            // TODO добавление участника в чат - нажатием кнопки и выбором из справочника (без истории)
            // В добавлении есть отличия от других мессенджеров: можно добавить с историей то есть новый участник получит все сообщения из чата которые были до его добавления в чат. При добавлении участников в личную переписку с другим пользователем создается новый чат - группа, во всех остальных случаях участник просто добавляется к текущему чату или заданию.
            // TODO удаление участника (с удалением истории сообщений)
            // TODO удаление участника (без удалением истории сообщений)
            // Для удаления участника из чата в списке участников чата необходимо нажать на крестик возле имени.
            //Удалить участника из чата можно сохранив ему доступ к сообщениям, которые были ранее в этом чате или закрыв ему доступ к старым сообщениям.
            // TODO создание задания в контакте с пользователем
            // TODO создание задания в групповом чате
            // TODO создание задания в отделе
            // TODO создание подзадания ((в задании))
            // Создать задание можно из меню на плитке контакта или введя звездочка задание имя задания и отправив его в чат, через меню откроется форма которая поможет составить сообщение для создания задания, установки исполнителя и других параметров.
            // Есть отличие отправки сообщения в отдел: на сообщение создается запрос на секретаря отдела, если в созданном запросе не будет других участников (кроме вас), обратитесь к администратору.
            // Как вы уже могли заметить все управление идет через командные сообщения (начинается со звездочки), в редакторе сообщения есть помощник который подскажет какие команды доступны, наберем звездочка получим список, продолжая ввод список будет фильтроваться
            // Для удобства часто используемые команды вынесены в управляющие элементы (кнопки, меню)
            // Задание это такойже чат с отображением ключевых элевентов в шапке чата. Управление чатами/заданиями производится отправкой служебных сообщений такое сообщение содержит команды котрые начинаются с !(восклицательный знак)
            //давайте
            // TODO отправка тега установка исполнителя, проверка у всех трех обновления шапки чата\
            // установим исполнителя
            // TODO отправка тега установка дедлайна, проверка у всех трех обновления шапки чата
            // установим дедлайн
            // TODO логирование работы старт работ, проверка у всех обновление признака работы
            // кнопка play начинает логировать время над задачей, кнопка pause приостанавливает логирование времени,
            // В профиле отображается задача над которой вы работаете (нажали play)
            // В плитках контактов также отображается иконка что пользователь работает наведя на неё можно увидеть наименование задания и по клику перейти в это задание.
            // TODO логирование работы пауза работ, проверка у всех обновление признака работы
            // кнопка stop останавливает логирование времени и меняет статус задания на выполнено
            // Так как некоторые механизмы еще не автоматизированы необходимо следить что в конце рабочего дня вы поставили задачу на паузу.
            // TODO смена статуса
            // Сменим статус на “нужна проверка”
            // TODO смена приоритета
            // TODO переименование контакта
            // Чтобы сменить имя контакта/чата/задания нажмем на наименовании чата в появившемся поле меняем наименование как нам необходимо нажимаем сохранить.
            // TODO переименовани чата\задания

            // Теперь давайте более детально посмотрим вкладки что на них выводится и для чего они нужны
            //Вкладка “контакты” первый раздел - “список” с ним мы уже познакомились
            // TODO В контактах список ваших контактов отсортированный по алфавиту и разбитый на группы по статусу, над контактами можно осуществлять поиск,введем в строку поиска “пе” и увидем Петрова, введем “ров” получим и Петрова и Сидорова

            // TODO контакты иерархия
            // Второй раздел “иерархия” где отображается иерархия компании с отделами и сотрудниками. Выбрав здесь узел в правой панели загрузится последняя активность - список чатов, заданий с участием выбранного пользователя и текущим пользователем.
            // TODO последняя активность
            // TODO полученние списка контактов (сортировка по алфавиту)
            // TODO задания иерархия
            // Второй раздел “иерархия” - здесь отображается иерархия заданий, выбрав узел попадаем в задание
            // TODO задания исходящие
            // Третий раздел “исходящие” - по умолчанию отображаются задания поставленные вами отсортированы по приоритету (чем больше тем выше в списке), можно отфильтровать по статусу, автору. Выбрав узел попадаем в задание.
            // TODO задания входящие
            // Четвертый раздел “входящие” - по умолчанию отображаются задания где текущий пользователь указан как исполнитель, сортируется по приоритету, можно отфильтровать по статусу и исполнителю. Выбрав узел попадаем в задание.
            // Этот раздел является основным для отслеживания задач которые необходимо выполнить.
            // TODO приватная переписка
            // TODO приватное задание
            // Особенности доступа, пользователь имеет полный доступ (читать/писать сообщения) для чатов где он является участником, подобный доступ распространяется на все нижестоящие задания, при этом в наименовании чата будет указано что доступ на основе вышестоящей задачи
            //Пользователь также имеет доступ к вышестоящим задачам но только для просмотра
            // TODO фильтрация тегов

            // TODO Уведомление о том что получено новое сообщение приходит только для тех чатов где вы являетесь участником
            // Рассмотрим дополнительные возможности
            //в шапке чата, меню “приватная переписка” скрывает содержимое чата от не участников при этом остается доступ к шапке (можно просмотреть наименование автора исполнителя и другие ключевые данные)
            //меню “приватное задание” скрывает чат полностью - только участники видят его и при этом нижестоящие задачи к данному доступа не имеют совсем
            // Просматривая переписку по чату может понадобится оставить только значимые сообщения (то есть те, которые содержат команды): смену статуса, установку дедлайн, для этого воспользуемся переключателем

            // TODO пригласить пользователя зарегистрироваться с линковкой к организации
            // TODO управление орг структурой
            // TODO смена пароля (текущему пользователю)
            // TODO востановление пароля по email
            // TODO востановление пароля по телефону
            // TODO добавление способа регистрации через google
            // TODO связать 2 учетки в одну

            speak("Веб приложение объединяющее функционал месенджера, создания и ведения задач, с возможностью автоматизации процессов.");
            speak("Задача проекта объединить переписку с заданиями");

            // TODO Разобъем интерфейс на три роли: исполнитель, руководитель, логист
            //Исполнитель, должен видеть задачи которые ему необходимо сделать, в простейшем случае задачник отсортированый по приоритету, исполнитель берет задачу с наивысшим приоритетом о выполняет ее.
            //Руководитель, распределяет имеющиеся задачи между исполнителями орентируясь на загрузку, следит за прогрессом выполнения задач, определяет качество и скорость работы. Для этих задач хорошо себя зарекоментовада доска Kanban таблица где столбцы по статусу задач, колонки задачи отсортированые по приоритету (важные вверху) с возможностью групировки по исполнителям.
            //Логист создает задачи, детализирует задачи, осуществляет планирование, оценку задач по времени и приоритету.
            //При этом пользователь может выполнять лубую из ролей ну и конечно же совмещать

            speak("Приложение находится в разработке");
            speak("Всем спасибо за внимание, вопросы и замечания отправляйте через talk to task точка ru пользователю Поляков Александр.");


            //TODO
            System.out.println("TODO");
        } finally {
            close();
        }
    }

    private void close() {
        // Выполняем закрытие окна, освобождение ресурсов. Автоматически после выполнения каждого теста.
        if (userA != null) {
            try {
                userA.quit();
            } catch (Exception ignore) {

            }
        }
        if (userB != null) {
            try {
                userB.quit();
            } catch (Exception ignore) {

            }
        }
    }

    /**
     * Метод выполняет открытие окна.
     */
    public ChromeDriver openBrowser() {
        final ChromeDriver driver = new ChromeDriver();
        return driver;
    }

    public void speak(String text) throws Exception {
        speak(text, 0);
    }

    public void speak(String text, int waitMillis) throws Exception {
        if (voiceEnable) {
            AudioUtils.speak(text);
            if (waitMillis > 0) {
                Thread.sleep(waitMillis);
            }
        }
    }


    public static void main(String[] args) throws Exception {
        WebDriverManager.chromedriver().setup();
        new RunDemo().demo(true);
    }

    @Test
    public void test() throws Exception {
        WebDriverManager.chromedriver().setup();
        demo(false);
    }
}
